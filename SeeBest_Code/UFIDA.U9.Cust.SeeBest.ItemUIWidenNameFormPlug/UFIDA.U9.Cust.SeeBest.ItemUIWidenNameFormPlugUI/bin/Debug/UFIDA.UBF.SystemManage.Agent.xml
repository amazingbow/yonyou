<?xml version="1.0"?>
<doc>
    <assembly>
        <name>UFIDA.UBF.SystemManage.Agent</name>
    </assembly>
    <members>
        <member name="M:UFIDA.UBF.SystemManage.Agent.AppMap.LoadAppMap">
            <summary>
            加载AppMapConfig
            </summary>
        </member>
        <member name="M:UFIDA.UBF.SystemManage.Agent.AppMap.GetAppMapConfig">
            <summary>
            获取控制服务器中，应用服务器配置信息
            </summary>
            <returns>应用服务器配置信息</returns>
        </member>
        <member name="M:UFIDA.UBF.SystemManage.Agent.AppMap.SaveAppMapConfig(System.String)">
            <summary>
            保存控制服务器的应用服务器配置信息到控制服务器引擎机器上
            </summary>
            <param name="appMapConfigInfo">当前的应用服务器配置信息</param>
        </member>
        <member name="M:UFIDA.UBF.SystemManage.Agent.GlobalBufferInfo.GetPatchState">
            <summary>
            获取补丁是否一致等信息
            </summary>
            <returns>返回获取的信息</returns>
        </member>
        <member name="M:UFIDA.UBF.SystemManage.Agent.BPMap.InitBPMap">
            <summary>
            初始化BPMap配置文件
            </summary>
            <returns>返回一个布尔值,表示取值的真和假</returns>
        </member>
        <member name="M:UFIDA.UBF.SystemManage.Agent.BPMap.GetAppEnableStateByBPName(System.String,System.String,System.String,System.String,System.String@)">
            <summary>
            根据BPName判断应用是否启用
            </summary>
            <param name="siteCode">站点ID</param>
            <param name="EnterpriseCode">企业Code</param>
            <param name="OrganizatinID">组织ID</param>
            <param name="BpName">BPName</param>
            <param name="errorMsg">返回未启用原因（可能是未启用或者找不到对应的应用）</param>
            <returns>如果启用返回true,否则返回false</returns>
        </member>
        <member name="M:UFIDA.UBF.SystemManage.Agent.BPMap.UpdateAppStateCacheConfig">
            <summary>
            更新应用状态缓存
            </summary>
            <returns></returns>
        </member>
        <member name="M:UFIDA.UBF.SystemManage.Agent.BPMap.GetBPMapConfig">
            <summary>
            获取BPMap信息
            </summary>
        </member>
        <member name="M:UFIDA.UBF.SystemManage.Agent.BPMap.GetAppStateCacheConfig">
            <summary>
            获取AppState信息
            </summary>
        </member>
        <member name="M:UFIDA.UBF.SystemManage.Agent.JobMap.LoadJobMap(System.String)">
            <summary>
            加载JobMapConfig
            </summary>
            <returns>返回一个布尔值,表示取值的真和假</returns>
        </member>
        <member name="M:UFIDA.UBF.SystemManage.Agent.JobMap.GetAppListByJobLocation(System.String,System.String)">
            <summary>
            根据job引擎位置，查找使用该引擎的应用列表
            </summary>
            <param name="enterpriseCode">企业编码</param>
            <param name="jobLocation">引擎位置(不含端口号)</param>
            <returns>符合条件的应用ID列表</returns>
        </member>
        <member name="M:UFIDA.UBF.SystemManage.Agent.JobMap.GetJobLocationByAppID(System.String,System.String)">
            <summary>
            根据应用ID,获取该应用使用的Job引擎
            </summary>
            <param name="enterpriseCode">企业编号</param>
            <param name="appID">应用ID</param>
            <returns>返回符合条件的Job引擎位置</returns>
        </member>
        <member name="M:UFIDA.UBF.SystemManage.Agent.JobMap.GetJobMapConfig">
            <summary>
            获取控制服务器中，Job引擎配置信息
            </summary>
            <returns>Job配置信息</returns>
        </member>
        <member name="M:UFIDA.UBF.SystemManage.Agent.JobMap.SaveJobMapConfig(System.String)">
            <summary>
            保存控制服务器的Job映射信息到控制服务器引擎机器上
            </summary>
            <param name="jobMapConfigInfo">当前的Job配置信息</param>
        </member>
        <member name="M:UFIDA.UBF.SystemManage.Agent.LicenseInfo.GetFeature">
            <summary>
            获取特征选配信息
            </summary>
            <returns>特征信息，存储在HashTable中</returns>
        </member>
        <member name="M:UFIDA.UBF.SystemManage.Agent.LicenseInfo.GetFeatureDescription">
            <summary>
            获取特征选配信息,包括信息描述
            </summary>
            <returns>带描述的特征信息</returns>
        </member>
        <member name="M:UFIDA.UBF.SystemManage.Agent.LicenseInfo.CopyLicenceFile(System.String)">
            <summary>
            拷贝licence文件到加密服务器上
            </summary>
            <param name="fileName">文件名称</param>
        </member>
        <member name="M:UFIDA.UBF.SystemManage.PackAttachAgent.#ctor">
            <summary>
            保证单例的私有构造函数；
            </summary>
        </member>
        <member name="P:UFIDA.UBF.SystemManage.PackAttachAgent.Instance">
            <summary>
            返回 PackAttachAgent 的唯一实例；
            </summary>
        </member>
        <member name="M:UFIDA.UBF.SystemManage.PatchDownloadAgent.#ctor">
            <summary>
            保证单例的私有构造函数；
            </summary>
        </member>
        <member name="P:UFIDA.UBF.SystemManage.PatchDownloadAgent.Instance">
            <summary>
            返回 PatchDownloadAgent 的唯一实例；
            </summary>
        </member>
        <member name="M:UFIDA.UBF.SystemManage.PatchValidatorAgent.#ctor">
            <summary>
            保证单例的私有构造函数；
            </summary>
        </member>
        <member name="P:UFIDA.UBF.SystemManage.PatchValidatorAgent.Instance">
            <summary>
            返回 PatchValidator 的唯一实例；
            </summary>
        </member>
        <member name="M:UFIDA.UBF.SystemManage.SystemPatchInfoAgent.#ctor(UFIDA.UBF.SystemManage.CommandServcie.HostAddress)">
            <summary>
            保证单例的私有构造函数；
            </summary>
        </member>
        <member name="M:UFIDA.UBF.SystemManage.SystemPatchInfoAgent.Create(UFIDA.UBF.SystemManage.CommandServcie.HostAddress)">
            <summary>
            创建一个到指定服务器的 ISystemPatchInfoCenter 服务代理；
            </summary>
            <param name="hostAddress"></param>
            <returns></returns>
        </member>
        <member name="P:UFIDA.UBF.SystemManage.SystemPatchInfoAgent.Instance">
            <summary>
            指向系统主控服务器的 ISystemPatchInfoCenter 的服务代理；
            </summary>
        </member>
        <member name="M:UFIDA.UBF.SystemManage.Agent.INotifyServerUpdate.NotifyCompleted(System.String,System.String,UFIDA.UBF.SystemManage.NotifyCompletedInfo)">
            <summary>
            
            </summary>
            <param name="ServerName">补丁服务器</param>
            <param name="HostServerName">执行补丁服务器</param>
            <param name="PatchNo">补丁号</param>
        </member>
        <member name="T:UFIDA.UBF.SystemManage.IPatchRemoteCrud">
            <summary>
            补丁远程服务接口
            </summary>
        </member>
        <member name="M:UFIDA.UBF.SystemManage.PatchRemoteCrud.RemoteGetAllCustomDownloadPatchList(System.String,System.String,System.String)">
            <summary>
            返回所有已下载的补丁列表；
            </summary>
            <param name="ServerName"></param>
            <param name="Port"></param>
            <param name="productversion"></param>
            <returns></returns>
        </member>
        <member name="T:UFIDA.UBF.SystemManage.Agent.IPatchOperator">
            <summary>
            补丁相关操作
            </summary>
        </member>
        <member name="M:UFIDA.UBF.SystemManage.Agent.IPatchOperator.DownLoadPatch(System.String,System.String)">
            <summary>
            手工下载补丁
            </summary>
            <returns></returns>
        </member>
        <member name="M:UFIDA.UBF.SystemManage.Agent.IPatchOperator.GetLatestPatchList(System.String,System.String)">
            <summary>
            下载最新的补丁列表（按应用下载后 2010-11-16）
            </summary>
            <param name="ServerName"></param>
            <param name="Port"></param>
            <returns></returns>
        </member>
        <member name="M:UFIDA.UBF.SystemManage.Agent.IPatchOperator.DownLoadPatch(System.String,System.String,UFIDA.UBF.SystemManage.PatchClientInfo)">
            <summary>
            手工下载补丁,可反馈信息
            </summary>
            <param name="ServerName">安装服务器名</param>
            <param name="Port">安装服务器端口</param>
            <param name="patchclient">返回信息的地址</param>
            <returns></returns>
        </member>
        <member name="M:UFIDA.UBF.SystemManage.Agent.IPatchOperator.FeedbackEngineUpdateMsg(UFIDA.UBF.SystemManage.PatchClientInfo,UFIDA.UBF.SystemManage.FeedbackEngineInfo)">
            <summary>
            反馈引擎安装信息
            </summary>
            <param name="info"></param>
            <param name="msg"></param>
            <returns></returns>
        </member>
        <member name="M:UFIDA.UBF.SystemManage.Agent.IPatchOperator.InstallEnginePatchs(System.String,System.String,UFIDA.UBF.SystemManage.PatchClientInfo)">
            <summary>
            安装引擎补丁
            </summary>
            <param name="ServerName"></param>
            <param name="Port"></param>
        </member>
        <member name="M:UFIDA.UBF.SystemManage.Agent.IPatchOperator.GetAllServerWhenEngineUpdate(System.String,System.String)">
            <summary>
            引擎补丁更新时得到 所有服务器;added by zhou 2010-4-26
            </summary>     
            <param name="ServerName"></param>
            <param name="Port"></param>
            <returns>服务器列表</returns>
        </member>
        <member name="M:UFIDA.UBF.SystemManage.Agent.IPatchOperator.GetInstallPatchListWhenEngineUpdate(System.String,System.String,UFIDA.UBF.SystemManage.DefaultServer)">
            <summary>
            引擎补丁更新时，得到安装补丁列表;added by zhou 2010-4-26
            </summary>
            <param name="ServerName"></param>
            <param name="Port"></param>
            <returns></returns>
        </member>
        <member name="M:UFIDA.UBF.SystemManage.Agent.IPatchOperator.GetAllPatchListWhenEngineUpdate(System.String,System.String,UFIDA.UBF.SystemManage.DefaultServer)">
            <summary>
            引擎补丁更新时得到所有补丁;added by zhou 2010-4-26
            </summary>
            <param name="ServerName"></param>
            <param name="Port"></param>
        </member>
        <member name="M:UFIDA.UBF.SystemManage.Agent.IPatchOperator.InstallPatchs(System.String,System.String,UFIDA.UBF.SystemManage.PatchInstallInfo)">
            <summary>
            手工安装补丁
            </summary>
            <param name="IsNeedSyn">是否需要同步系统状态</param>
            <param name="flag">0代表安装，1代表卸载</param>
            <returns></returns>
        </member>
        <member name="M:UFIDA.UBF.SystemManage.Agent.IPatchOperator.GetInstalledPatch(System.String,System.String,UFIDA.UBF.SystemManage.InstalledPatchQueryInfo)">
            <summary>
            取已安装补丁
            </summary>
            <returns></returns>
        </member>
        <member name="M:UFIDA.UBF.SystemManage.Agent.IPatchOperator.GetUninstalledPatchs(System.String,System.String,UFIDA.UBF.SystemManage.LastPatchCodeInfo)">
            <summary>
            取已下载未安装的补丁
            </summary>
            <param name="ServerName"></param>
            <param name="Port"></param>
            <returns></returns>
        </member>
        <member name="M:UFIDA.UBF.SystemManage.Agent.IPatchOperator.NotifyPatchServerRollBackPatchList(System.String,System.String,System.String)">
            <summary>
            通知补丁服务器，回滚补丁安装历史
            </summary>
            <param name="ServerName"></param>
            <param name="Port"></param>
            <param name="RollBackPatchNo">回滚到的补丁号(包括该补丁号)</param>
            <returns></returns>
        </member>
        <member name="M:UFIDA.UBF.SystemManage.Agent.IPatchOperator.FeedBackPatchSetupMsg(System.String,System.String,System.String,UFIDA.UBF.SystemManage.PatchSetupMsg)">
            <summary>
            反馈下载信息
            </summary>
            <param name="ServerName"></param>
            <param name="Port"></param>
            <param name="url"></param>
            <param name="msg"></param>
            <returns></returns>
        </member>
        <member name="M:UFIDA.UBF.SystemManage.Agent.IPatchOperator.CheckServicesState(System.String,System.String)">
            <summary>
            检查 引擎更新时，服务是否启动; added by zhoujj
            </summary>
            <returns>启动返回false，未启动异常，将要重新启动但未关闭的返回true</returns>
        </member>
        <member name="M:UFIDA.UBF.SystemManage.Agent.IPatchOperator.CheckPatchServerToServers(System.String,System.String,System.String,System.String)">
            <summary>
            检查补丁服务器到各服务器通信状态; Patch ->Servers ;
            added by zhou;
            </summary>
            <param name="PatchServer"></param>
            <param name="PatchPort"></param>
            <param name="ServerName"></param>
            <param name="Port"></param>
        </member>
        <member name="M:UFIDA.UBF.SystemManage.Agent.IPatchOperator.CheckControlServerAndServerIsLink(System.String,System.String,System.String,System.String)">
            <summary>
            检查本服务器是否连通主控服务器; Servers ->MainControl;
            added by zhou
            </summary>
            <param name="Servername">服务器名</param>
            <param name="Port">端口</param>
            <param name="ControlServer">控制服务器名</param>
            <param name="ControlPort">控制服务器端口</param>
        </member>
        <member name="M:UFIDA.UBF.SystemManage.Agent.IPatchOperator.CheckPatchServerIsLinkWhenEnginUpdate(System.String,System.String,System.String,System.String)">
            <summary>
            更新引擎时检查补丁服务器连接情况;server->patch;
            added by zhou 2010-9-30 ;
            </summary>
            <param name="Servername"></param>
            <param name="Port"></param>
            <param name="PatchServer"></param>
            <param name="PatchPort"></param>
        </member>
        <member name="M:UFIDA.UBF.SystemManage.Agent.PatchOperator.GetLatestPatchList(System.String,System.String)">
            <summary>
            下载最新的补丁列表（修改补丁下载方式后2010-11-16）
            </summary>
            <param name="ServerName"></param>
            <param name="Port"></param>
            <returns></returns>
        </member>
        <member name="M:UFIDA.UBF.SystemManage.Agent.PatchOperator.InstallEnginePatchs(System.String,System.String,UFIDA.UBF.SystemManage.PatchClientInfo)">
            <summary>
            更新引擎，并返回信息
            </summary>
            <param name="ServerName"></param>
            <param name="Port"></param>
            <param name="patchclient"></param>
        </member>
        <member name="M:UFIDA.UBF.SystemManage.Agent.PatchOperator.CheckServicesState(System.String,System.String)">
            <summary>
            检查 引擎更新时，服务是否启动; added by zhoujj
            </summary>
            <returns>启动返回false，未启动异常，将要重新启动但未关闭的返回true</returns>
        </member>
        <member name="M:UFIDA.UBF.SystemManage.Agent.PatchOperator.FeedbackEngineUpdateMsg(UFIDA.UBF.SystemManage.PatchClientInfo,UFIDA.UBF.SystemManage.FeedbackEngineInfo)">
            <summary>
            反馈引擎更新信息
            </summary>
            <param name="info">接受信息的主机</param>
            <param name="msg">反馈的消息</param>
            <returns></returns>
        </member>
        <member name="M:UFIDA.UBF.SystemManage.Agent.PatchOperator.GetAllServerWhenEngineUpdate(System.String,System.String)">
            <summary>
            引擎补丁更新时得到 所有服务器;added by zhou 2010-4-26
            </summary>
            <returns>服务器列表</returns>
        </member>
        <member name="M:UFIDA.UBF.SystemManage.Agent.PatchOperator.GetInstallPatchListWhenEngineUpdate(System.String,System.String,UFIDA.UBF.SystemManage.DefaultServer)">
            <summary>
            引擎补丁更新时得到所有已经安装的补丁;added by zhou 2010-4-26
            </summary>
            <returns>服务器列表</returns>
        </member>
        <member name="M:UFIDA.UBF.SystemManage.Agent.PatchOperator.GetAllPatchListWhenEngineUpdate(System.String,System.String,UFIDA.UBF.SystemManage.DefaultServer)">
            <summary>
            引擎补丁更新时得到所有补丁;added by zhou 2010-4-26
            </summary>
            <returns>所有补丁</returns>
        </member>
        <member name="M:UFIDA.UBF.SystemManage.Agent.PatchOperator.DownLoadPatch(System.String,System.String,UFIDA.UBF.SystemManage.PatchClientInfo)">
            <summary>
            重载DownLoadPatch,可以反馈信息
            </summary>
            <param name="ServerName"></param>
            <param name="Port"></param>
            <param name="patchclient"></param>
            <returns></returns>
        </member>
        <member name="M:UFIDA.UBF.SystemManage.Agent.PatchOperator.GetUninstalledPatchs(System.String,System.String,UFIDA.UBF.SystemManage.LastPatchCodeInfo)">
            <summary>
            取所有未安装的补丁列表；
            </summary>
            <param name="ServerName"></param>
            <param name="Port"></param>
            <returns></returns>
        </member>
        <member name="M:UFIDA.UBF.SystemManage.Agent.PatchOperator.FeedBackDownloadPatchMsg(UFIDA.UBF.SystemManage.PatchClientInfo,UFIDA.UBF.SystemManage.PatchDownloadMsg)">
            <summary>
            反馈下载信息
            </summary>
            <param name="info">接受信息的主机</param>
            <param name="msg">反馈的消息</param>
            <returns></returns>
        </member>
        <member name="M:UFIDA.UBF.SystemManage.Agent.PatchOperator.CheckControlServerAndServerIsLink(System.String,System.String,System.String,System.String)">
            <summary>
            检查本服务器是否连通主控服务器
            </summary>
            <param name="Servername">服务器名</param>
            <param name="Port">端口</param>
            <param name="ControlServer">控制服务器名</param>
            <param name="ControlPort">控制服务器端口</param>
        </member>
        <member name="M:UFIDA.UBF.SystemManage.Agent.PatchOperator.CheckPatchServerToServers(System.String,System.String,System.String,System.String)">
            <summary>
            检查从 补丁服务器 到 各服务器通信状况;
            CheckPatchServerAndServerIsLink的反向检查;add zhoujja
            </summary>
            <param name="PatchServer"></param>
            <param name="PatchPort"></param>
            <param name="ServerName"></param>
            <param name="Port"></param>
        </member>
        <member name="M:UFIDA.UBF.SystemManage.Agent.PatchOperator.CheckPatchServerIsLinkWhenEnginUpdate(System.String,System.String,System.String,System.String)">
            <summary>
            更新引擎时检查补丁服务器连接情况;server->patch
            added by zhou 2010-9-30 ;
            </summary>
            <param name="ServerName"></param>
            <param name="Port"></param>
            <param name="PatchServer"></param>
            <param name="PatchPort"></param>
        </member>
        <member name="M:UFIDA.UBF.SystemManage.Agent.INetworkConfig.UpdateNetWorkConfig(System.String,System.String,UFIDA.UBF.SystemManage.UpdateConfigurationConfig)">
            <summary>
            设置网络配置
            </summary>
            <param name="ServerName">补丁服务器</param>
            <param name="updateNetCfg">网络配置</param>
            <returns></returns>
        </member>
        <member name="M:UFIDA.UBF.SystemManage.Agent.INetworkConfig.UpdateSubscribConfig(System.String,System.String,UFIDA.UBF.SystemManage.SubscribInfoConfig)">
            <summary>
            设置订阅信息
            </summary>
            <param name="ServerName">补丁服务器</param>
            <param name="subInfocfg">订阅信息</param>
            <returns></returns>
        </member>
        <member name="M:UFIDA.UBF.SystemManage.Agent.NetWorkConfig.UpdateNetWorkConfig(System.String,System.String,UFIDA.UBF.SystemManage.UpdateConfigurationConfig)">
            <summary>
            设置网络配置
            </summary>
            <param name="ServerName">补丁服务器</param>
            <param name="updateNetCfg">网络配置</param>
            <returns></returns>
        </member>
        <member name="M:UFIDA.UBF.SystemManage.Agent.NetWorkConfig.UpdateSubscribConfig(System.String,System.String,UFIDA.UBF.SystemManage.SubscribInfoConfig)">
            <summary>
            设置订阅信息
            </summary>
            <param name="ServerName">补丁服务器</param>
            <param name="subInfocfg">订阅信息</param>
            <returns></returns>
        </member>
        <member name="M:UFIDA.UBF.SystemManage.Agent.NetWorkConfig.TestConnection(System.String,System.String,UFIDA.UBF.SystemManage.TestConnectionInfo)">
            <summary>
            测试连接
            </summary>
            <param name="ServerName">补丁服务器</param>
            <param name="tConInfo">测试信息</param>
            <returns>连接成功与否及错误信息</returns>
        </member>
        <member name="M:UFIDA.UBF.SystemManage.Agent.PrinterInfo.GetPrinters">
            <summary>
            获取打印机信息
            </summary>
            <returns>返回获取的打印机列表</returns>
        </member>
        <member name="M:UFIDA.UBF.SystemManage.Agent.PrinterInfo.GetPrinterByCode(System.String)">
            <summary>
            根据Code获取打印机信息
            </summary>
            <param name="code">打印机列表</param>
            <returns>获取的打印机信息，如果找不到，则返回null</returns>
        </member>
        <member name="M:UFIDA.UBF.SystemManage.Agent.PrinterInfo.GetPrinterConfig">
            <summary>
            获取控制服务器中，Printer配置信息
            </summary>
            <returns>Printer配置信息</returns>
        </member>
        <member name="M:UFIDA.UBF.SystemManage.Agent.PrinterInfo.SavePrinterConfig(System.String)">
            <summary>
            保存控制服务器的信息到控制服务器引擎机器上
            </summary>
        </member>
        <member name="T:UFIDA.UBF.SystemManage.Agent.ApplicationServiceAddress">
            <summary>
            应用服务的 SystemManageEngine 的服务地址；
            </summary>
        </member>
        <member name="T:UFIDA.UBF.SystemManage.SysMngServiceAddress">
            <summary>
            系统管理服务地址；
            </summary>
        </member>
        <member name="M:UFIDA.UBF.SystemManage.SysMngServiceAddress.#ctor">
            <summary>
            根据 AgentConfig 配置创建指向主控服务器的 SysMngServiceAddress 实例；
            </summary>
        </member>
        <member name="M:UFIDA.UBF.SystemManage.SysMngServiceAddress.#ctor(System.String,System.Int32)">
            <summary>
            创建指向主控服务器的 SysMngServiceAddress 实例；
            </summary>
            <param name="serverName"></param>
            <param name="port"></param>
        </member>
        <member name="M:UFIDA.UBF.SystemManage.Agent.ISetupOperator.Setup(System.String,System.String,UFIDA.UBF.SystemManage.InstallTaskItem)">
            <summary>
            安装服务
            </summary>
            <param name="ServerName">待安装机器名</param>
            <param name="Port">待安装机器端口号</param>
            <param name="item">安装信息</param>
        </member>
        <member name="M:UFIDA.UBF.SystemManage.Agent.IAppServerInfo.ClearMessageQueue(System.String,System.String)">
            <summary>
            清除 App服务器搜索消息队列
            </summary>
            <param name="ServerName">服务器名称</param>
            <param name="EntCode">企业代码</param>
        </member>
        <!-- 对于成员“M:UFIDA.UBF.SystemManage.Agent.AppServerInfo.ClearMessageQueue(System.String,System.String)”忽略有格式错误的 XML 注释 -->
        <member name="M:UFIDA.UBF.SystemManage.Agent.AppServerInfo.CallInvokeMethod(System.String,System.String,System.String,System.Object[])">
            <summary>
            反射调用
            </summary>
            <param name="operatorLocation">程序集</param>
            <param name="operatorFullName">类</param>
            <param name="method">方法</param>
            <param name="args">参数集</param>
        </member>
        <member name="M:UFIDA.UBF.SystemManage.Agent.EnterpriseInfo.GetAllEnterpriseForPortal">
            <summary>
            获取所有企业列表_for portal
            </summary>
            <returns></returns>
        </member>
        <member name="M:UFIDA.UBF.SystemManage.Agent.EnterpriseInfo.GetAllEnterprise">
            <summary>
            获取所有企业列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:UFIDA.UBF.SystemManage.Agent.EnterpriseInfo.GetEnterpriseByCode(System.String,System.String,System.String)">
            <summary>
            根据企业编号获取企业信息
            </summary>
            <param name="Code">企业编号</param>
            <returns>企业信息</returns>
            
        </member>
        <member name="M:UFIDA.UBF.SystemManage.Agent.ISiteInfo.GetRemoteSite(System.String,System.String)">
            <summary>
            返回远程机器上的Local站点的信息；
            </summary>
            <param name="serverName"></param>
            <param name="port"></param>
            <returns></returns>
        </member>
        <member name="M:UFIDA.UBF.SystemManage.Agent.ISiteInfo.GetMainControl(System.String,System.String)">
            <summary>
            从指定的服务器上获取 MainControl 配置；
            </summary>
            <param name="ServerName"></param>
            <param name="Port"></param>
            <returns></returns>
        </member>
        <member name="M:UFIDA.UBF.SystemManage.Agent.SiteInfo.GetLocalSite">
            <summary>
            获取本地Site信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:UFIDA.UBF.SystemManage.Agent.SiteInfo.GetRemoteSite(System.String,System.String)">
            <summary>
            返回远程机器上的Local站点的信息；
            </summary>
            <param name="serverName"></param>
            <param name="port"></param>
            <returns></returns>
        </member>
        <member name="M:UFIDA.UBF.SystemManage.Agent.SiteInfo.GetSiteListByEnterpriseCode(System.String)">
            <summary>
            获取麽企业所分布的Site列表
            </summary>
            <param name="entCode">企业代码</param>
            <returns>满足条件的企业列表</returns>
        </member>
        <member name="M:UFIDA.UBF.SystemManage.Agent.SiteInfo.GetApplicaitonServerLocationBySiteCode(System.String)">
            <summary>
            获取某个Site的ApplicationServer位置
            </summary>
            <param name="siteCode">站点代码</param>
            <returns>ApplicationServer位置信息</returns>
        </member>
        <member name="M:UFIDA.UBF.SystemManage.Agent.SiteInfo.GetLocalServerList(System.String)">
             <summary>
             获取本地站点列表
             </summary>
            <param name="serverType">服务器类型</param>
             <returns>服务器信息</returns>
        </member>
        <member name="M:UFIDA.UBF.SystemManage.Agent.SiteInfo.GetLocalServerList(System.String,System.String,System.String)">
             <summary>
             获取本地站点中的服务器列表
             </summary>
            <param name="serverType">服务器类型</param>
             <returns>服务器信息</returns>
        </member>
        <member name="M:UFIDA.UBF.SystemManage.Agent.SiteInfo.GetMainControl">
            <summary>
            获取控制服务器配置信息
            </summary>
            <returns>配置信息</returns>
        </member>
        <member name="M:UFIDA.UBF.SystemManage.Agent.SiteInfo.SaveMainControl(System.String)">
            <summary>
            保存控制服务器的配置信息到控制服务器引擎机器上
            </summary>
            <param name="controlInfo">当前的控制服务器配置信息</param>
        </member>
        <member name="M:UFIDA.UBF.SystemManage.Agent.SiteInfo.ChangeSiteDownloadState(UFIDA.UBF.SystemManage.RunStates,System.String@)">
            <summary>
            修改站点下载状态
            </summary>
            <param name="downloadState">新的状态值</param>
            <param name="Msg">修改失败时，读取失败原因</param>
            <returns>修改成功，返回true;修改失败，返回false</returns>
        </member>
        <member name="M:UFIDA.UBF.SystemManage.Agent.SiteInfo.ChangeSiteInstallState(UFIDA.UBF.SystemManage.RunStates,System.String@)">
            <summary>
            修改站点安装状态
            </summary>
            <param name="installState">新的状态值</param>
            <param name="Msg">修改失败时，读取失败原因</param>
            <returns>修改成功，返回true;修改失败，返回false</returns>
        </member>
        <member name="M:UFIDA.UBF.SystemManage.Agent.SiteInfo.GetSiteDownloadState">
            <summary>
            获取站点的下载状态
            </summary>
            <returns>站点的下载状态</returns>
        </member>
        <member name="M:UFIDA.UBF.SystemManage.Agent.SiteInfo.GetSiteInstallState">
            <summary>
            获取站点的安装状态
            </summary>
            <returns>站点的下载状态</returns>
        </member>
        <member name="M:UFIDA.UBF.SystemManage.Agent.SiteInfo.GetSiteState">
            <summary>
            获取站点的状态
            </summary>
            <returns>站点的状态</returns>
        </member>
        <member name="M:UFIDA.UBF.SystemManage.Agent.IWebServerInfo.GetAllWebServerUrl">
            <summary>
            返回所有数据；
            此方法每次调用都从每一个Web服务器进行检索，并将结果更新到缓存；
            </summary>
            <returns></returns>
        </member>
        <member name="M:UFIDA.UBF.SystemManage.Agent.IWebServerInfo.GetAllWebServerUrlFromCache">
            <summary>
            返回所有Web服务器的 URL；
            此方法从缓存中返回数据；
            </summary>
            <returns></returns>
        </member>
        <member name="M:UFIDA.UBF.SystemManage.Agent.IApplicationService.GetApplicationService(System.String)">
            <summary>
            返回的是附加在 ApplicationService 的 Engine 列表；
            注：在 ApplicationServiceInfo 的实现是通过附加在 ApplicationService 上的 SystemManageEngine 检查同在 ApplicationService 进程中的 JobEngine 状态；
            换句话说，访问的服务路径实际上是“SystemCommandService/JobServer” ，而不是服务器上的代理的地址；
            </summary>
            <param name="ServerName">服务器名</param>
            <returns></returns>
        </member>
        <member name="M:UFIDA.UBF.SystemManage.Agent.IApplicationService.GetApplicationServiceByServerAgent(System.String)">
            <summary>
            返回的是附加在 ApplicationService 的 Engine 列表；
            注：这是通过服务器上的代理检测服务器上 ApplicationService 的 WinService 是否已经注册，
            并返回注册的服务的启动程序所在目录下 bin\UBFEngineHosting.dll.config 配置文件 configuration\Engines\Engine 配置节配置的引擎的列表；
            仅检查引擎的 Name 属性返回，其它属性均为空；
            </summary>
            <param name="ServerName">服务器名</param>
            <returns></returns>
        </member>
        <member name="M:UFIDA.UBF.SystemManage.Agent.IApplicationService.StartApplicationService(System.String,System.String)">
            <summary>
            启动 ApplicationService 中的指定引擎；
            注：在 ApplicationServiceInfo 的实现是通过附加在 ApplicationService 上的 SystemManageEngine 启动同在 ApplicationService 进程中的 JobEngine ；
            </summary>
            <param name="serverName">服务器名称</param>
            <param name="engineName">引擎名称</param>
            <returns></returns>
        </member>
        <member name="M:UFIDA.UBF.SystemManage.Agent.IApplicationService.StartApplicationServiceByServerAgent(System.String,System.String)">
            <summary>
            启动 ApplicationService 中的指定引擎；
            注：通过指定服务器的代理执行，先尝试查找并启动 ApplicationService 的 Windows 服务；
            成功启动 ApplicationService 后，尝试启动指定的引擎；
            </summary>
            <param name="serverName">服务器名称</param>
            <param name="engineName">引擎名称</param>
            <returns></returns>
        </member>
        <member name="M:UFIDA.UBF.SystemManage.Agent.ApplicationServiceInfo.GetApplicationService(System.String)">
            <summary>
            返回的是附加在 ApplicationService 的 Engine 列表；
            注：在 ApplicationServiceInfo 的实现是通过附加在 ApplicationService 上的 SystemManageEngine 检查同在 ApplicationService 进程中的 JobEngine 状态；
            换句话说，访问的服务路径实际上是“SystemCommandService/JobServer” ，而不是服务器上的代理的地址；
            </summary>
            <param name="ServerName">服务器名</param>
            <returns></returns>
        </member>
        <member name="M:UFIDA.UBF.SystemManage.Agent.ApplicationServiceInfo.GetApplicationServiceByServerAgent(System.String)">
            <summary>
            返回的是附加在 ApplicationService 的 Engine 列表；
            注：这是通过服务器上的代理检测服务器上 ApplicationService 的 WinService 是否已经注册，
            并返回注册的服务的启动程序所在目录下 bin\UBFEngineHosting.dll.config 配置文件 configuration\Engines\Engine 配置节配置的引擎的列表；
            仅检查引擎的 Name 属性返回，其它属性均为空；
            </summary>
            <param name="ServerName">服务器名</param>
            <returns></returns>
        </member>
        <member name="M:UFIDA.UBF.SystemManage.Agent.ApplicationServiceInfo.StartApplicationService(System.String,System.String)">
            <summary>
            启动 ApplicationService 中的指定引擎；
            注：在 ApplicationServiceInfo 的实现是通过附加在 ApplicationService 上的 SystemManageEngine 启动同在 ApplicationService 进程中的 JobEngine ；
            </summary>
            <param name="serverName">服务器名称</param>
            <param name="engineName">引擎名称</param>
            <returns></returns>
        </member>
        <member name="M:UFIDA.UBF.SystemManage.Agent.ApplicationServiceInfo.StartApplicationServiceByServerAgent(System.String,System.String)">
            <summary>
            启动 ApplicationService 中的指定引擎；
            注：通过指定服务器的代理执行，先尝试查找并启动 ApplicationService 的 Windows 服务；
            成功启动 ApplicationService 后，尝试启动指定的引擎；
            </summary>
            <param name="serverName">服务器名称</param>
            <param name="engineName">引擎名称</param>
            <returns></returns>
        </member>
        <member name="M:UFIDA.UBF.SystemManage.Agent.EndPointInfo.GetEndPoint(System.String,System.String,System.String,System.Boolean,System.String@,System.String@,System.Boolean@)">
             <summary>
             获取指定应用的访问点
             </summary>
             <param name="SiteCode">站点代码</param>
             <param name="EnterpriseCode">企业代码</param>
            <param name="orgID">组织ID</param>
             <param name="binding">服务协议的Binding的名称</param>
             <param name="address">服务协议的地址</param>
             <param name="islocal">是否本地调用</param>
             <returns>返回一个布尔值,表示取值的真和假</returns>
        </member>
        <member name="M:UFIDA.UBF.SystemManage.Agent.EndPointInfo.InitBPMap">
            <summary>
            初始化BPMap配置文件
            </summary>
            <returns>返回一个布尔值,表示取值的真和假</returns>
        </member>
    </members>
</doc>
